From: Michael Biebl <biebl@debian.org>
Date: Sat, 9 Feb 2013 15:55:43 +0100
Subject: Fix mounting of remote filesystems, like NFS

Mounting remote filesystems, like NFS, via /etc/fstab using _netdev is
currently broken for two reasons:
- The nfs-common and rpcbind init scripts aren't correctly ordered
  because rpcbind uses an insserv specific configuration file which
  systemd doesn't parse, to define the $portmap system facility.
  As a result nfs-common is started too early, before rpcbind is
  running, and so the rpc.statd daemon simply exits.
- systemd automatically mounts filesystems with the _netdev option via
  remote-fs.target. This target should block until network.target is
  active. The network.target is currently not properly hooked up so
  systemd tries to mount those filesystems too early, when the network
  is not yet up. The result is a timeout during boot and a failed mount
  attempt.

This workaround does the following:
- Since the only provider for the portmap facility is the rpcbind
  init script, we map this directly to rpcbind.service instead of
  rpcbind.target. This ensures correct odering for init scripts using
  Required-Start: $portmap.
- Remote mounts are no longer hooked up in the remote-fs.target, ie.
  they are not started by systemd anymore. Instead we rely on the
  if-up.d mountnfs hook to mount those types of filesystems.

Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=673309
---
 src/core/service.c                    | 2 +-
 src/core/special.h                    | 2 +-
 src/fstab-generator/fstab-generator.c | 3 ++-
 3 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/core/service.c b/src/core/service.c
index 9377a81..83203e2 100644
--- a/src/core/service.c
+++ b/src/core/service.c
@@ -360,7 +360,7 @@ static int sysv_translate_facility(const char *name, const char *filename, char
                  * To break the loop, just ignore it */
                 "network",              SPECIAL_NETWORK_TARGET,
                 "named",                SPECIAL_NSS_LOOKUP_TARGET,
-                "portmap",              SPECIAL_RPCBIND_TARGET,
+                "portmap",              SPECIAL_RPCBIND_SERVICE,
                 "remote_fs",            SPECIAL_REMOTE_FS_TARGET,
                 "syslog",               SPECIAL_SYSLOG_TARGET,
                 "time",                 SPECIAL_TIME_SYNC_TARGET,
diff --git a/src/core/special.h b/src/core/special.h
index 6865c04..7132a35 100644
--- a/src/core/special.h
+++ b/src/core/special.h
@@ -61,7 +61,7 @@
 /* LSB compatibility */
 #define SPECIAL_NETWORK_TARGET "network.target"           /* LSB's $network */
 #define SPECIAL_NSS_LOOKUP_TARGET "nss-lookup.target"     /* LSB's $named */
-#define SPECIAL_RPCBIND_TARGET "rpcbind.target"           /* LSB's $portmap */
+#define SPECIAL_RPCBIND_SERVICE "rpcbind.service"         /* LSB's $portmap */
 #define SPECIAL_SYSLOG_TARGET "syslog.target"             /* LSB's $syslog */
 #define SPECIAL_TIME_SYNC_TARGET "time-sync.target"       /* LSB's $time */
 
diff --git a/src/fstab-generator/fstab-generator.c b/src/fstab-generator/fstab-generator.c
index cda98cd..ceab9e7 100644
--- a/src/fstab-generator/fstab-generator.c
+++ b/src/fstab-generator/fstab-generator.c
@@ -313,7 +313,8 @@ static int add_mount(
         }
 
         if (!noauto) {
-                if (post) {
+                /* don't start network mounts automatically, we do that via ifupdown hooks for now */
+                if (post && !streq(post, SPECIAL_REMOTE_FS_TARGET)) {
                         lnk = strjoin(arg_dest, "/", post, nofail || automount ? ".wants/" : ".requires/", name, NULL);
                         if (!lnk)
                                 return log_oom();
