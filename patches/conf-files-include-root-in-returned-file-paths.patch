From: Michael Marineau <michael.marineau@coreos.com>
Date: Thu, 19 Jun 2014 19:07:04 -0700
Subject: conf-files: include root in returned file paths

This restores the original root handling logic that was present prior to
112cfb18 when path expansion moved to path_strv_canonicalize_absolute.
That behavior partially went away in 12ed81d9.

Alternatively all users of conf_files_list* could be updated to
concatenate the paths themselves as unit_file_query_preset did but since
no user needs the un-concatenated form that is pointless duplication.

(cherry picked from commit cba2ef02722114da2b730d57f1e3bb43013d8921)

Conflicts:
	src/shared/install.c

(cherry picked from commit 084c41bc148e0a7b0eeee614d9e0acc9aaae6b0d)
---
 src/shared/conf-files.c | 16 ++++++----------
 src/shared/install.c    |  6 +++---
 2 files changed, 9 insertions(+), 13 deletions(-)

diff --git a/src/shared/conf-files.c b/src/shared/conf-files.c
index 4ec8bed..fc5f1fe 100644
--- a/src/shared/conf-files.c
+++ b/src/shared/conf-files.c
@@ -37,20 +37,16 @@
 #include "hashmap.h"
 #include "conf-files.h"
 
-static int files_add(Hashmap *h, const char *dirpath, const char *suffix, const char *root) {
+static int files_add(Hashmap *h, const char *root, const char *path, const char *suffix) {
         _cleanup_closedir_ DIR *dir = NULL;
+        char *dirpath;
 
-        assert(dirpath);
+        assert(path);
         assert(suffix);
 
-        if (isempty(root))
-                dir = opendir(dirpath);
-        else {
-                const char *p;
+        dirpath = strappenda(root ? root : "", path);
 
-                p = strappenda3(root, "/", dirpath);
-                dir = opendir(p);
-        }
+        dir = opendir(dirpath);
         if (!dir) {
                 if (errno == ENOENT)
                         return 0;
@@ -118,7 +114,7 @@ static int conf_files_list_strv_internal(char ***strv, const char *suffix, const
                 return -ENOMEM;
 
         STRV_FOREACH(p, dirs) {
-                r = files_add(fh, *p, suffix, root);
+                r = files_add(fh, root, *p, suffix);
                 if (r == -ENOMEM) {
                         hashmap_free_free(fh);
                         return r;
diff --git a/src/shared/install.c b/src/shared/install.c
index 86a05a4..f40be79 100644
--- a/src/shared/install.c
+++ b/src/shared/install.c
@@ -1763,7 +1763,7 @@ UnitFileState unit_file_get_state(
 
 int unit_file_query_preset(UnitFileScope scope, const char *name) {
         _cleanup_strv_free_ char **files = NULL;
-        char **i;
+        char **p;
         int r;
 
         assert(scope >= 0);
@@ -1791,10 +1791,10 @@ int unit_file_query_preset(UnitFileScope scope, const char *name) {
         if (r < 0)
                 return r;
 
-        STRV_FOREACH(i, files) {
+        STRV_FOREACH(p, files) {
                 _cleanup_fclose_ FILE *f;
 
-                f = fopen(*i, "re");
+                f = fopen(*p, "re");
                 if (!f) {
                         if (errno == ENOENT)
                                 continue;
