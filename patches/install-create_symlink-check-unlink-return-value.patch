From: Djalal Harouni <tixxdz@opendz.org>
Date: Thu, 17 Apr 2014 01:47:11 +0100
Subject: install: create_symlink() check unlink() return value

create_symlink() do not check the return value of unlink(), this may
confuse the user.

Before the unlink() call we check the 'force' argument. If it is not set
we fail with -EEXIST, otherwise we unlink() the file, therefore the next
symlink() should not fail with -EEXIST (do not count races...).

However since callers may not have appropriate privileges to unlink()
the file we lose the -EPERM or any other errno code of unlink(), and
return the -EEXIST of the next symlink(). Fix this by checking unlink()
results.

Before:
$ systemctl --force --root=~/container-03 set-default multi-user.target
Failed to set default target: File exists

After:
$ systemctl --force --root=~/container-03 set-default multi-user.target
Failed to set default target: Permission denied

(cherry picked from commit af7fce1cdb6c0d6ce56bcddccbc31dd3d64a8cd8)
(cherry picked from commit ac19aafa62b4dd47e26b368b54c17e6e1c71d8fb)
---
 src/shared/install.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/src/shared/install.c b/src/shared/install.c
index b9c85b7..e6a61fa 100644
--- a/src/shared/install.c
+++ b/src/shared/install.c
@@ -1172,7 +1172,9 @@ static int create_symlink(
         if (!force)
                 return -EEXIST;
 
-        unlink(new_path);
+        r = unlink(new_path);
+        if (r < 0 && errno != ENOENT)
+                return -errno;
 
         if (symlink(old_path, new_path) >= 0) {
                 add_file_change(changes, n_changes, UNIT_FILE_UNLINK, new_path, NULL);
