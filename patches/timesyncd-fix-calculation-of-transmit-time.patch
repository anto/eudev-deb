From: Michal Schmidt <mschmidt@redhat.com>
Date: Wed, 10 Sep 2014 19:10:05 +0200
Subject: timesyncd: fix calculation of transmit time

Upstream commit:
commit 73c76e6330d31e1d04454fd7408dd56b4eedca9f
Author: Miroslav Lichvar <mlichvar@redhat.com>
Date:   Wed Aug 27 16:47:18 2014 +0200

    timesyncd: fix calculation of transmit time

    The kernel timestamp (recv_time) is made earlier than current time
    (now_ts), use the timestamp captured before sending packet directly.
---
 src/timesync/timesyncd.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/src/timesync/timesyncd.c b/src/timesync/timesyncd.c
index dc00b2f..d123f0a 100644
--- a/src/timesync/timesyncd.c
+++ b/src/timesync/timesyncd.c
@@ -565,7 +565,6 @@ static int manager_receive_response(sd_event_source *source, int fd, uint32_t re
                 .msg_namelen = sizeof(server_addr),
         };
         struct cmsghdr *cmsg;
-        struct timespec now_ts;
         struct timeval *recv_time;
         ssize_t len;
         double origin, receive, trans, dest;
@@ -678,8 +677,7 @@ static int manager_receive_response(sd_event_source *source, int fd, uint32_t re
          *  The round-trip delay, d, and system clock offset, t, are defined as:
          *  d = (T4 - T1) - (T3 - T2)     t = ((T2 - T1) + (T3 - T4)) / 2"
          */
-        assert_se(clock_gettime(clock_boottime_or_monotonic(), &now_ts) >= 0);
-        origin = tv_to_d(recv_time) - (ts_to_d(&now_ts) - ts_to_d(&m->trans_time_mon)) + OFFSET_1900_1970;
+        origin = ts_to_d(&m->trans_time) + OFFSET_1900_1970;
         receive = ntp_ts_to_d(&ntpmsg.recv_time);
         trans = ntp_ts_to_d(&ntpmsg.trans_time);
         dest = tv_to_d(recv_time) + OFFSET_1900_1970;
